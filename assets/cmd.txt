docker run --gpus all --shm-size=30g --name paddle -it -v $PWD:/home/locchuong paddlepaddle/paddle:2.4.1-gpu-cuda10.2-cudnn7.6-trt7.0 /bin/bash

docker run --gpus all --shm-size=30g --name paddle -it -v $PWD:/home/locchuong paddlepaddle/paddle:2.3.2-gpu-cuda10.1-cudnn7 /bin/bash

docker exec -it paddle bash

# train det
       
CUDA_VISIBLE_DEVICES=1 python3 PaddleOCR/tools/train.py -c myconfigs/ch_PP-OCRv3_det_cml.yml \
 -o Global.pretrained_model=./pretrain_models/ch_PP-OCRv3_det_distill_train/best_accuracy \
       Global.epoch_num=1000

# eval det
CUDA_VISIBLE_DEVICES=1 python3 PaddleOCR/tools/eval.py -c myconfigs/ch_PP-OCRv3_det_dml.yml -o Global.checkpoints=./output/ch_PP-OCR_v3_det_white_fg/lastest

# train rec
CUDA_VISIBLE_DEVICES=0 python3 PaddleOCR/tools/train.py -c myconfigs/ch_PP-OCRv3_rec.yml \
 -o Global.pretrained_model=./pretrain_models/ch_PP-OCRv3_rec_train/best_accuracy\
    Global.character_dict_path=PaddleOCR/ppocr/utils/en_dict.txt \
    Global.epoch_num=1000

# predict rec
python3 PaddleOCR/tools/infer_rec.py -c myconfigs/ch_PP-OCRv3_rec.yml \
-o Global.pretrained_model=outputs/rec/best_accuracy \
Global.character_dict_path=PaddleOCR/ppocr/utils/en_dict.txt \
 Global.infer_img=debug/crop_img/Qtcam_23_04_17_13_53_56-1_crop_1.jpg

# export model
python3 PaddleOCR/tools/export_model.py -c myconfigs/ch_PP-OCRv3_rec.yml -o Global.pretrained_model=outputs/rec/best_accuracy  Global.save_inference_dir=./inference/rec/
   
# train e2e
CUDA_VISIBLE_DEVICES=1 python3 PaddleOCR/tools/train.py -c myconfigs/e2e_r50_vd_pg.yml \
 -o Global.epoch_num=100

# export e2e
CUDA_VISIBLE_DEVICES=1 python3 PaddleOCR/tools/export_model.py -c myconfigs/e2e_r50_vd_pg.yml -o Global.pretrained_model=./output/e2e_pgnetA_white_bg/best_accuracy Global.load_static_weights=False Global.save_inference_dir=./inference/e2e_pgnetA_white_bg

CUDA_VISIBLE_DEVICES=1 python3 PaddleOCR/tools/export_model.py -c myconfigs/e2e_r50_vd_pg.yml -o Global.pretrained_model=./output/e2e_pgnetA_white_bg/latest Global.load_static_weights=False Global.save_inference_dir=./inference/e2e_pgnetA_white_bg

# predict e2e
python3 PaddleOCR/tools/infer/predict_e2e.py --e2e_algorithm="PGNet" --image_dir="./train_data/e2e/" --e2e_model_dir="./inference/e2e_pgnetA_white_bg" --e2e_char_dict_path="./PaddleOCR/ppocr/utils/ic15_dict.txt"
